{"version":3,"sources":["webpack://blog/./src/components/Header.js","webpack://blog/./src/components/Tags.js","webpack://blog/./src/pages/blogs.js"],"names":["props","className","Link","to","link","title","tags","map","tag","key","isSmall","React","blogs","setBlogs","dispBlogs","setDispBlogs","textbox","setTextbox","allBlogs","useStaticQuery","allMdx","nodes","card","length","blog","frontmatter","url","description","type","size","value","onChange","event","text","target","filter","toLowerCase","includes","some"],"mappings":"yHAqBA,IAlBe,SAACA,GACd,OACE,gCACE,0BAAQC,UAAU,eAChB,gBAAC,EAAAC,KAAD,CAAMC,GAAIH,EAAMI,KAAMH,UAAU,4BAC9B,0BACE,wBAAMA,UAAU,eAAeD,EAAMK,MAArC,MACA,wBAAMJ,UAAU,mBAAhB,aAGJ,gBAAC,EAAAC,KAAD,CAAMC,GAAG,IAAIF,UAAU,4BACrB,uC,wDCIV,IAfa,SAACD,GACZ,IAAMM,EAAON,EAAMM,KAAKC,KAAI,SAACC,GAC3B,OACE,uBACEC,IAAKD,EACLP,UAA4B,GAAjBD,EAAMU,QAAkB,uBAAyB,aAE3DF,MAKP,OAAO,uBAAKP,UAAU,kBAAkBK,K,6FC4F1C,UArGkB,WAChB,MAA0BK,WAAe,IAAlCC,EAAP,KAAcC,EAAd,KACA,EAAkCF,WAAe,IAA1CG,EAAP,KAAkBC,EAAlB,KACA,EAA8BJ,WAAe,IAAtCK,EAAP,KAAgBC,EAAhB,KAEMC,GAAWC,oBAAe,cAgBhCR,aAAgB,WACdE,EAASK,EAASE,OAAOC,OACzBN,EAAaG,EAASE,OAAOC,SAC5B,IAEH,IA8BMC,EACJR,EAAUS,OAAS,EACjBT,EAAUP,KAAI,SAACiB,GACb,OACE,uBAAKf,IAAKe,EAAKC,YAAYpB,MAAOJ,UAAU,QAC1C,uBAAKA,UAAU,eACb,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIqB,EAAKC,YAAYC,KAAMF,EAAKC,YAAYpB,QAEpD,gBAAC,IAAD,CAAMC,KAAMkB,EAAKC,YAAYnB,KAAMI,SAAS,KAE9C,uBAAKT,UAAU,aACb,yBAAIuB,EAAKC,YAAYE,cAEvB,+BAKN,6CAGJ,OACE,gCACE,wBAAM1B,UAAU,cACd,4CACA,gBAAC,IAAD,CAAQG,KAAK,SAASC,MAAM,eAC5B,uBAAKJ,UAAU,gBACb,mCAEE,yBACE2B,KAAK,OACLC,KAAK,KACLC,MAAOd,EACPe,SAvCS,SAACC,GAzBF,IAACC,EA0BnBhB,EAAWe,EAAME,OAAOJ,OA1BLG,EA2BPD,EAAME,OAAOJ,MA1BzBf,EACEH,EAAMuB,QACJ,SAACX,GAAD,OACEA,EAAKC,YAAYpB,MAAM+B,cAAcC,SAASJ,EAAKG,gBACnDZ,EAAKC,YAAYE,YACdS,cACAC,SAASJ,EAAKG,gBACjBZ,EAAKC,YAAYnB,KAAKgC,MAAK,SAAC9B,GAC1B,OAAOA,EAAI4B,cAAcC,SAASJ,EAAKG,2BA2D1Cd,GAEH,gBAAC,IAAD","file":"component---src-pages-blogs-js-86d0a4731a9ee91c6981.js","sourcesContent":["import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Header = (props) => {\n  return (\n    <>\n      <header className=\"header-main\">\n        <Link to={props.link} className=\"header-title not-default\">\n          <h1>\n            <span className=\"header-name\">{props.title}🍜</span>\n            <span className=\"header-zuruzuru\">&lt; ズルズル </span>\n          </h1>\n        </Link>\n        <Link to=\"/\" className=\"header-totop not-default\">\n          <p>＞Topへ</p>\n        </Link>\n      </header>\n    </>\n  );\n};\n\nexport default Header;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Tags = (props) => {\n  const tags = props.tags.map((tag) => {\n    return (\n      <div\n        key={tag}\n        className={props.isSmall == true ? \"tags-main tags-small\" : \"tags-main\"}\n      >\n        {tag}\n      </div>\n    );\n  });\n\n  return <div className=\"tags-container\">{tags}</div>;\n};\n\nexport default Tags;\n","import * as React from \"react\";\nimport { Link, graphql, useStaticQuery } from \"gatsby\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Tags from \"../components/Tags\";\n\nconst BlogsPage = () => {\n  const [blogs, setBlogs] = React.useState([]);\n  const [dispBlogs, setDispBlogs] = React.useState([]);\n  const [textbox, setTextbox] = React.useState(\"\");\n\n  const allBlogs = useStaticQuery(graphql`\n    query AllBlogsQuery {\n      allMdx(sort: { fields: frontmatter___date, order: DESC }) {\n        nodes {\n          frontmatter {\n            date(formatString: \"MMMM D, YYYY\")\n            title\n            description\n            url\n            tags\n          }\n        }\n      }\n    }\n  `);\n\n  React.useEffect(() => {\n    setBlogs(allBlogs.allMdx.nodes);\n    setDispBlogs(allBlogs.allMdx.nodes);\n  }, []);\n\n  const filterBlogs = (text) => {\n    setDispBlogs(\n      blogs.filter(\n        (blog) =>\n          blog.frontmatter.title.toLowerCase().includes(text.toLowerCase()) ||\n          blog.frontmatter.description\n            .toLowerCase()\n            .includes(text.toLowerCase()) ||\n          blog.frontmatter.tags.some((tag) => {\n            return tag.toLowerCase().includes(text.toLowerCase());\n          })\n      )\n    );\n  };\n\n  const filterTags = (text) => {\n    setDispBlogs(\n      blogs.filter((blog) => {\n        return blog.frontmatter.tags.some((tag) => {\n          return tag.toLowerCase().includes(text.toLowerCase());\n        });\n      })\n    );\n  };\n\n  const handleChange = (event) => {\n    setTextbox(event.target.value);\n    filterBlogs(event.target.value);\n  };\n\n  const card =\n    dispBlogs.length > 0 ? (\n      dispBlogs.map((blog) => {\n        return (\n          <div key={blog.frontmatter.title} className=\"card\">\n            <div className=\"card-header\">\n              <h2>\n                <Link to={blog.frontmatter.url}>{blog.frontmatter.title}</Link>\n              </h2>\n              <Tags tags={blog.frontmatter.tags} isSmall={true} />\n            </div>\n            <div className=\"card-body\">\n              <p>{blog.frontmatter.description}</p>\n            </div>\n            <hr />\n          </div>\n        );\n      })\n    ) : (\n      <p>一致する記事がありませんでした。</p>\n    );\n\n  return (\n    <>\n      <main className=\"blogs-main\">\n        <title>Search Page</title>\n        <Header link=\"/blogs\" title=\"Tech Blogs\" />\n        <div className=\"blogs-search\">\n          <label>\n            検索：\n            <input\n              type=\"text\"\n              size=\"25\"\n              value={textbox}\n              onChange={handleChange}\n            />\n          </label>\n        </div>\n        {card}\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default BlogsPage;\n"],"sourceRoot":""}