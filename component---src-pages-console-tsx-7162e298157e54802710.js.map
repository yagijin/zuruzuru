{"version":3,"file":"component---src-pages-console-tsx-7162e298157e54802710.js","mappings":"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","sources":["webpack://zuruzurura.men/./lib/make-ramen.ts","webpack://zuruzurura.men/./lib/console-page-functions.ts","webpack://zuruzurura.men/./src/pages/console.tsx","webpack://zuruzurura.men/./src/styles/pages/console.module.scss"],"sourcesContent":["const getRandomNum = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport const makeRamen = (area: HTMLElement) => {\n  const ramen = document.createElement('span')\n  ramen.innerHTML = '🍜'\n  ramen.style.position = 'absolute'\n  ramen.style.fontSize = 'xx-large'\n  ramen.style.top = getRandomNum(0, area.clientHeight - 30) + 'px'\n  ramen.style.left = getRandomNum(0, area.clientWidth - 30) + 'px'\n  area.appendChild(ramen)\n  // 消す時のために要素を返す\n  return ramen\n}\n\nexport const removeRamens = (ramens: HTMLSpanElement[]) => {\n  ramens.forEach((ramen) => {\n    ramen.remove()\n  })\n}\n","const permissionCheck = (command: string): boolean => {\n  const notPermittedCommands = ['sudo', 'rm', 'cd', 'mkdir', 'cp']\n  return notPermittedCommands.includes(command)\n}\n\nconst levenshteinDistance = (str1: string, str2: string): number => {\n  const d: number[][] = []\n  for (let i = 0; i <= str1.length; i++) {\n    d[i] = []\n    d[i][0] = i\n  }\n  for (let i = 0; i <= str2.length; i++) {\n    d[0][i] = i\n  }\n\n  let cost = 0\n  for (let i = 1; i <= str1.length; i++) {\n    for (let j = 1; j <= str2.length; j++) {\n      cost = str1[i - 1] === str2[j - 1] ? 0 : 1\n      d[i][j] = Math.min(\n        d[i - 1][j] + 1,\n        d[i][j - 1] + 1,\n        d[i - 1][j - 1] + cost\n      )\n    }\n  }\n  return d[str1.length][str2.length] / Math.max(str1.length, str2.length)\n}\n\nexport const onEnter = (\n  content: content,\n  commandsWithArgs: string[],\n  doSL: () => void\n): { executed: boolean; message: string[] } => {\n  let commands: string[] = []\n  if (permissionCheck(commandsWithArgs[0])) {\n    commands.push('that operation is not permitted.')\n    commands.push('type <help> to see command list.')\n  } else if (commandsWithArgs[0] === content.command) {\n    if (commandsWithArgs.length > 2) {\n      commands.push('invalid number of arguments.')\n    } else if (commandsWithArgs.length < 2) {\n      commands = content.body[0].text\n\n      switch (content.command) {\n        case 'github':\n        case 'github.app':\n          window.open('https://github.com/yagijin')\n          break\n        case 'zuruzuru':\n        case 'zuruzuru.app':\n          window.open('https://zuruzurura.men')\n          break\n        case 'blog':\n        case 'blog.app':\n          window.open('https://zuruzurura.men')\n          break\n        case 'sl':\n          doSL()\n          break\n        default:\n      }\n    } else {\n      // コマンドの引数が一致したらbreakしてその結果を返す\n      commands.push('invalid argument.')\n      for (let j = 0; j < content.body.length; j++) {\n        if (commandsWithArgs[1] === content.body[j].argument) {\n          commands = content.body[j].text\n          break\n        }\n      }\n    }\n  } else {\n    return { executed: false, message: [''] }\n  }\n  return { executed: true, message: commands }\n}\n\nexport const commandSuggestion = (\n  command: string,\n  commands: string[]\n): string => {\n  let min = levenshteinDistance(command, commands[0] ?? '')\n  let min_index = 0\n  for (let i = 1; i < content.length; i++) {\n    const distance = levenshteinDistance(command, commands[i])\n    if (min > distance) {\n      min_index = i\n      min = distance\n    }\n  }\n  if (min < 0.7) {\n    return \"you'd like to use <\" + content[min_index].command + '> ?'\n  } else {\n    return 'command not found.'\n  }\n}\n\ntype content = {\n  command: string\n  body: {\n    argument: string\n    text: string[]\n  }[]\n}\n\nexport const content: content[] = [\n  {\n    command: 'help',\n    body: [\n      {\n        argument: '',\n        text: [\n          'You can use following commands, ',\n          'ls -- list directory contents.',\n          'cat <filename> -- browse text file.',\n          '*.app -- open new tab.',\n        ],\n      },\n    ],\n  },\n  {\n    command: 'cat',\n    body: [\n      {\n        argument: '',\n        text: ['<cat> needs <filename> as argument.'],\n      },\n      {\n        argument: 'award.txt',\n        text: [\n          '🎊Awards in Hackathon🎊',\n          '- HackU2019Nagoya => Happy hacking award',\n          '- KonicaMinoltaHackathon2019 => Jury special award',\n          '- OthloHack2019 => Cookpad award',\n          '- JPHACKS2019 => Finalist, Innovator Certification, Other 3 awards',\n          '- GeospatialHackersProgram2020 => Tokai competition champions',\n        ],\n      },\n      {\n        argument: 'profile.txt',\n        text: [\n          'name     => yagijin',\n          'job      => web developer',\n          'skill    => JavaScript, TypeScript, TOEIC720',\n          'favorite => 🏕 🚲 🍜 🏸 🏐 🧙 ☖ ♞ ⚆ 🎴 🎲🎲',\n        ],\n      },\n    ],\n  },\n  {\n    command: 'zuruzuru.app',\n    body: [\n      {\n        argument: '',\n        text: ['You opened new window.'],\n      },\n    ],\n  },\n  {\n    command: 'zuruzuru',\n    body: [\n      {\n        argument: '',\n        text: ['You opened new window.'],\n      },\n    ],\n  },\n  {\n    command: 'github.app',\n    body: [\n      {\n        argument: '',\n        text: ['You opened new window.'],\n      },\n    ],\n  },\n  {\n    command: 'github',\n    body: [\n      {\n        argument: '',\n        text: ['You opened new window.'],\n      },\n    ],\n  },\n  {\n    command: 'blog.app',\n    body: [\n      {\n        argument: '',\n        text: ['You opened new window.'],\n      },\n    ],\n  },\n  {\n    command: 'blog',\n    body: [\n      {\n        argument: '',\n        text: ['You opened new window.'],\n      },\n    ],\n  },\n  {\n    command: 'ls',\n    body: [\n      {\n        argument: '',\n        text: ['award.txt　blog.app　github.app　profile.txt　zuruzuru.app'],\n      },\n    ],\n  },\n  {\n    command: 'sl',\n    body: [\n      {\n        argument: '',\n        text: ['you should use <ls> instead of <sl>.'],\n      },\n    ],\n  },\n  {\n    command: 'whoami',\n    body: [\n      {\n        argument: '',\n        text: ['you are you.'],\n      },\n    ],\n  },\n  {\n    command: 'man',\n    body: [\n      {\n        argument: '',\n        text: ['<man> needs <command name> as argument.'],\n      },\n      {\n        argument: 'ls',\n        text: [\n          'display a file list of current directory.',\n          'you can use like \"ls\".',\n          'no arguments needed.',\n        ],\n      },\n      {\n        argument: 'sl',\n        text: [\n          'display animations aimed to correct users who accidentally enter <sl> instead of <ls>.',\n          'you can use like \"sl\".',\n          'no arguments needed.',\n        ],\n      },\n      {\n        argument: 'cat',\n        text: [\n          'display txt file on the console.',\n          'you can use like \"cat profile.txt\".',\n          '<filename> is needed as an argument.',\n        ],\n      },\n      {\n        argument: 'whoami',\n        text: [\n          'display your <username>.',\n          'you can use like \"whoami\".',\n          'no arguments needed.',\n        ],\n      },\n      {\n        argument: 'help',\n        text: [\n          'display a list of commands you can use.',\n          'you can use like \"help\".',\n          'no arguments needed.',\n        ],\n      },\n      {\n        argument: 'man',\n        text: [\n          'display a manual of command.',\n          'you can use like \"man help\".',\n          '<command name> is needed as an argument.',\n        ],\n      },\n    ],\n  },\n]\n","import React, { useState, useEffect, useRef } from 'react'\nimport * as styles from '@/styles/pages/console.module.scss'\nimport GoogleFonts from '@/atoms/GoogleFonts'\nimport Head from '@/organisms/Head'\nimport { makeRamen, removeRamens } from '../../lib/make-ramen'\n\nimport {\n  onEnter,\n  commandSuggestion,\n  content,\n} from '../../lib/console-page-functions'\n\nconst Console = () => {\n  const [input, setInput] = useState('')\n  const [history, setHistory] = useState<string[]>([])\n  const [historyIndex, setHistoryIndex] = useState(0)\n  const [commands, setCommands] = useState<string[]>([])\n  const [stateSL, setStateSL] = useState(0)\n\n  const refStateSL = useRef(stateSL)\n\n  useEffect(() => {\n    refStateSL.current = stateSL\n  }, [stateSL])\n\n  useEffect(() => {\n    const ramens: HTMLSpanElement[] = []\n    for (let i = 0; i < 30; i++) {\n      ramens.push(makeRamen(document.getElementsByTagName('body')[0]))\n    }\n    return () => {\n      removeRamens(ramens)\n    }\n  }, [])\n\n  const consoleClicked = (): void => {\n    document.getElementById('inputCommand')?.focus()\n  }\n\n  const doSL = () => {\n    const intervalId = setInterval(() => {\n      setStateSL(refStateSL.current + 1)\n      if (refStateSL.current > 120) {\n        clearInterval(intervalId)\n        setStateSL(0)\n      }\n    }, 20)\n  }\n\n  const keyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    const commandsWithArgs = input.split(' ')\n\n    // Arrow up / down： 過去のコマンドを入力\n    if (e.key === 'ArrowUp') {\n      let index = historyIndex - 1\n      if (index < 0) {\n        index = history.length - 1\n      }\n      setHistoryIndex(index)\n      setInput(history[index])\n    }\n    if (e.key === 'ArrowDown') {\n      let index = historyIndex + 1\n      if (index >= history.length) {\n        index = 0\n      }\n      setHistoryIndex(index)\n      setInput(history[index])\n    }\n\n    // Enter： コマンド実行\n    if (e.key === 'Enter') {\n      setHistoryIndex(history.length + 1)\n      setHistory([...history, input])\n      let shouldRecommend = true\n      for (let i = 0; i < content.length; i++) {\n        const { executed, message } = onEnter(\n          content[i],\n          commandsWithArgs,\n          doSL\n        )\n        if (executed) {\n          setCommands(message)\n          shouldRecommend = false\n          break\n        }\n      }\n      if (shouldRecommend) {\n        // コマンドが見つからなかった場合、\n        // コマンドとの編集距離を求めて，類似度の高いコマンドをサジェストする\n        setCommands([\n          commandSuggestion(\n            commandsWithArgs[0],\n            content.map((c) => c.command)\n          ),\n        ])\n      }\n      setInput('')\n    }\n\n    // Tab：コマンドをサジェストする\n    if (e.key === 'Tab') {\n      // 何も入力されてない場合何もしない\n      if (commandsWithArgs[0] === '') {\n        return\n      }\n      // デフォルトの挙動（フォーカスの移動）を止める\n      e.preventDefault()\n\n      for (let i = 0; i < content.length; i++) {\n        if (content[i].command.indexOf(input) === 0) {\n          setInput(content[i].command)\n          break\n        }\n      }\n    }\n  }\n\n  return (\n    <div className={styles.background}>\n      <GoogleFonts />\n      <Head\n        info={{\n          title: 'Console',\n          type: 'website',\n          description: 'console style profile',\n          url: '/console',\n        }}\n        filename=\"ogp_console.png\"\n      />\n      <div className={styles.console} onClick={() => consoleClicked()}>\n        <header>\n          <div\n            onClick={() => {\n              if (window.confirm('トップページへ移動しますが良いですか？')) {\n                window.location.href = '/'\n              }\n            }}\n          ></div>\n          <div onClick={() => window.alert('最小化できない...')}></div>\n          <div onClick={() => window.alert('全画面にできない...')}></div>\n          <div>yagijin -- profile</div>\n        </header>\n        <p>\n          {`Welcome to Yagijin's Profile!! Type \"`}\n          <span>help</span>\n          {`\" to show commands.`}\n        </p>\n        {stateSL > 0 && (\n          <img\n            src=\"../sl.png\"\n            alt=\"SLのアイコン\"\n            style={{\n              position: 'absolute',\n              right: `${stateSL}%`,\n              height: '50%',\n              zIndex: 2,\n            }}\n          />\n        )}\n        <main>\n          {history.length !== 0 && (\n            <>\n              <div>\n                <span>$</span>\n                {history[history.length - 1]}\n              </div>\n              <div>\n                <ol>\n                  {commands.map((command, index) => (\n                    <li key={index}>{command}</li>\n                  ))}\n                </ol>\n              </div>\n            </>\n          )}\n          <div>\n            <span>$</span>\n            <input\n              type=\"text\"\n              id=\"inputCommand\"\n              value={input}\n              autoComplete=\"off\"\n              autoFocus\n              onChange={(e) => setInput(e.target.value)}\n              onKeyDown={(e) => keyPress(e)}\n            />\n          </div>\n        </main>\n      </div>\n    </div>\n  )\n}\n\nexport default Console\n","// extracted by mini-css-extract-plugin\nexport var background = \"console-module--background--U7QQf\";\nexport var console = \"console-module--console--aAtcU\";"],"names":["getRandomNum","min","max","Math","floor","random","makeRamen","area","ramen","document","createElement","innerHTML","style","position","fontSize","top","clientHeight","left","clientWidth","appendChild","removeRamens","ramens","forEach","remove","levenshteinDistance","str1","str2","d","i","length","cost","j","onEnter","content","commandsWithArgs","doSL","command","commands","includes","push","executed","message","body","text","window","open","argument","commandSuggestion","min_index","distance","useState","input","setInput","history","setHistory","historyIndex","setHistoryIndex","setCommands","stateSL","setStateSL","refStateSL","useRef","useEffect","current","getElementsByTagName","intervalId","setInterval","clearInterval","className","GoogleFonts","Head","info","title","type","description","url","filename","onClick","getElementById","focus","confirm","location","href","alert","src","alt","right","height","zIndex","map","index","key","id","value","autoComplete","autoFocus","onChange","e","target","onKeyDown","split","shouldRecommend","c","preventDefault","indexOf","keyPress"],"sourceRoot":""}